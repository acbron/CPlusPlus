### `malloc-free ` & ` new-delete`

**相同点**

> `malloc`和`new`都可以用于申请动态内存，`free`和`delete`都可以用于释放内存

**不同点**

> `malloc`和`free`是C／C++的标准库函数，`new`和`delete`是C++的运算符

> 对于非内部数据类型的对象而言，光用`malloc/free`无法满足动态对象的要求。因为`new`在对象创建的时候同时会自动执行构造函数，`delete`则会在对象消亡的时候自动执行析构函数。由于`malloc/free`是库函数而不是运算符，不在编译器控制权限之内，因为它不会执行相应的初始化工作

> `new`可以认为是`malloc`加构造函数的执行，其直接返回带类型的数据，而`malloc`返回void指针

