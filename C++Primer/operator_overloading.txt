概述：
重载操作符必须具有一个类类型的操作数：对内置类型(比如int)或内置数据类型(比如数组)是不能够重载其运算符的。
运算符重载不改变优先级和结合性。
如果重载函数是成员函数，则形参比非成员函数的少1，因为作为成员函数，左操作数为隐含的this指针。
如果重载函数是非成员函数，通常定义为friend。

忠告：
逗号，取址，逻辑等操作符不应该重载，因为这些符号具有内置意义，重载后会将其覆盖。
成员或非成员的选择：
	=,[],(),->等必须声明为成员函数
	+=，-=等复合赋值操作符以及自增，自减等通常是成员函数
	对称的操作符，比如算术，相等，关系和位操作符，通常为非成员函数

<1>重载输入和输出操作符
	输出操作符<<
//通常输出对象不该被改变，所以第二个参数是对象的const引用
//输出操作符应该不要有格式控制，这跟内置类型一致。
ostream & << (ostream &os,const className &rhs)
{
	//do something
	os << ....;
	return os;
}

	输入操作符>>
//输入操作符的第二个形参必须是非const，因为要将目标读入到对象中。而且，应该重视输入操作符必须要处理错误和文件结束的可能性
istream & >> (istream &is,className &rhs)
{
	//do somthing
	is >> ...;
	if(is)
		...;
	else
		is = className(); //调用默认构造函数
	return is;
}

输入输出操作符必须是非成员函数，因为第一个参数必须是ostream/istream，不能是隐含的对象的this指针

